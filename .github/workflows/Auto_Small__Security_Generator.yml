name: Auto Small Security Generator

on:
  schedule:
    - cron: "0 */5 * * *"  # Runs every hour
  workflow_dispatch:
    inputs:
      account:
        description: 'Number of Accounts to be generated (default = 0)'
        required: false
        default: '0'
        type: string
      key:
        description: 'Number of Keys to be generated (default = 1)'
        required: false
        default: '1'
        type: string
      mail:
        description: 'Choose the mail provider to generate license'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      key_type:
        description: 'Modes of operation'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
        default: --small-business-key
      os:
        description: 'Operating System of runner'
        required: true
        type: choice
        options:
          - macOS
          - Linux
          - Windows
        default: macOS
      branch:
        description: "Repository branch"
        required: false
        type: choice
        options:
          - main
          - test
        default: main

jobs:
  Linux:
    if: github.event.inputs.os == 'Linux' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Generate Keys and Accounts
        run: |
          # Determine if the workflow was triggered by a manual dispatch or schedule
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ACCOUNT=${{ github.event.inputs.account }}
            KEY=${{ github.event.inputs.key }}
            MAIL=${{ github.event.inputs.mail }}
            KEY_TYPE=${{ github.event.inputs.key_type }}
            OS=${{ github.event.inputs.os }}
            BRANCH=${{ github.event.inputs.branch }}
          else
            # Default values for scheduled runs
            ACCOUNT=0
            KEY=1
            MAIL=emailfake
            KEY_TYPE=--small-business-key
            OS=macOS
            BRANCH=main
          fi

          git clone -b ${BRANCH} https://github.com/Shariful797/ESET-KeyGen.git
          cd ESET-KeyGen
          
          sudo apt update
          sudo apt install -y python3-pip python3-venv
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          
          if [[ ${ACCOUNT} -ne 0 && ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo "Account:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${ACCOUNT} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            echo -e "\nAccount:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          fi

  macOS:
    if: github.event.inputs.os == 'macOS' || github.event_name == 'schedule'
    runs-on: macos-latest
    steps:
      - name: Generate Keys and Accounts
        run: |
          # Determine if the workflow was triggered by a manual dispatch or schedule
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ACCOUNT=${{ github.event.inputs.account }}
            KEY=${{ github.event.inputs.key }}
            MAIL=${{ github.event.inputs.mail }}
            KEY_TYPE=${{ github.event.inputs.key_type }}
            OS=${{ github.event.inputs.os }}
            BRANCH=${{ github.event.inputs.branch }}
          else
            # Default values for scheduled runs
            ACCOUNT=0
            KEY=1
            MAIL=emailfake
            KEY_TYPE=--small-business-key
            OS=macOS
            BRANCH=main
          fi

          git clone -b ${BRANCH} https://github.com/Shariful797/ESET-KeyGen.git   
          cd ESET-KeyGen
          
          brew install python
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

          if [[ ${ACCOUNT} -ne 0 && ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo "Account:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${ACCOUNT} -ne 0 ]]; then
            python3 main.py --auto-detect-browser --account --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${ACCOUNT}
            echo -e "\nAccount:" >> $GITHUB_STEP_SUMMARY
            cat ./*ACCOUNTS.txt >> $GITHUB_STEP_SUMMARY
          elif [[ ${KEY} -ne 0 ]]; then
            python3 main.py --auto-detect-browser ${KEY_TYPE} --email-api ${MAIL} --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat ${KEY}
            echo -e "\nKey:" >> $GITHUB_STEP_SUMMARY
            cat ./*KEYS.txt >> $GITHUB_STEP_SUMMARY
          fi

  Windows:
    if: github.event.inputs.os == 'Windows' || github.event_name == 'schedule'
    runs-on: windows-latest
    steps:
      - name: Generate Keys and Accounts
        run: |
          # Determine if the workflow was triggered by a manual dispatch or schedule
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ACCOUNT=${{ github.event.inputs.account }}
            KEY=${{ github.event.inputs.key }}
            MAIL=${{ github.event.inputs.mail }}
            KEY_TYPE=${{ github.event.inputs.key_type }}
            OS=${{ github.event.inputs.os }}
            BRANCH=${{ github.event.inputs.branch }}
          else
            # Default values for scheduled runs
            ACCOUNT=0
            KEY=1
            MAIL=emailfake
            KEY_TYPE=--small-business-key
            OS=macOS
            BRANCH=main
          fi


          git clone https://github.com/Shariful797/ESET-KeyGen.git   
          cd ESET-KeyGen

          python -m venv venv
          venv\Scripts\pip install -r requirements.txt

          if ($ACCOUNT -ne 0 -and $KEY -ne 0) {
              python main.py --auto-detect-browser --account --email-api $MAIL --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $ACCOUNT
              python main.py --auto-detect-browser $KEY_TYPE --email-api $MAIL --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $KEY
              echo "Account:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
              Get-Content -Path ./*ACCOUNTS.txt | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
              echo "`nKey:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
              Get-Content -Path ./*KEYS.txt | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }
          elseif ($ACCOUNT -ne 0) {
              python main.py --auto-detect-browser --account --email-api $MAIL --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $ACCOUNT
              echo "`nAccount:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
              Get-Content -Path ./*ACCOUNTS.txt | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }
          elseif ($KEY -ne 0) {
              python main.py --auto-detect-browser $KEY_TYPE --email-api $MAIL --token ${{ secrets.TOKEN }} --skip-update-check --no-logo --disable-progress-bar --disable-logging --repeat $KEY
              echo "`nKey:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
              Get-Content -Path ./*KEYS.txt | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }
